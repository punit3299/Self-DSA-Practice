int largestRectangleArea(vector<int>& heights) {
        int n = heights.size();
        vector<int> left(n), right(n);
        stack<int> st;

        // calcaulating next smaller element to left
        st.push(0);
        left[0]=-1;
        for(int i=1;i<n;i++){
            while(!st.empty() && heights[st.top()]>heights[i]){
                st.pop();
            }
            if(st.empty()){
                left[i] = -1;
            }else{
                left[i] = st.top();
            }
            st.push(i);
        }

        st = stack<int>();

        // calcaulating next smaller element to right
        right[n-1]=n;
        st.push(n-1);
        for(int i=n-2;i>=0;i--){
            while(!st.empty() && heights[st.top()]>=heights[i]){
                st.pop();
            }
            if(st.empty()){
                right[i] = n;
            }else{
                right[i] = st.top();
            }
            st.push(i);
        }

        int maxArea = INT_MIN;
        for(int i=0;i<n;i++){
            int area = (right[i]-left[i]-1)*heights[i];
            maxArea = max(maxArea, area);
        }

        return maxArea;
    }
