#include<bits/stdc++.h>
using namespace std;

// Max Heap
int kthLargest(int a[],int n,int k){
    priority_queue<int> pq;
    for(int i=0;i<n;i++){
        pq.push(a[i]);
    }
    int i=1;
    while(!pq.empty()&&i<k){
        pq.pop();
        i++;
    }
    return pq.top();
}

//Min Heap
int kthSmallest(int a[],int n,int k){
    priority_queue<int,vector<int>,greater<int> > pq;
    for(int i=0;i<n;i++){
        pq.push(a[i]);
    }
    int i=1;
    while(!pq.empty()&&i<k){
        pq.pop();
        i++;
    }
    return pq.top();
}
int main(){
    int a[] = { 12, 3, 5, 7, 4, 19, 26 };
    int n = sizeof(a) / sizeof(a[0]), k = 3;
    cout<<kthLargest(a,n,k)<<endl;
    cout<<kthSmallest(a,n,k);
    return 0;
}